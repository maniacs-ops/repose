# -*- mode: ruby -*-
# vi: set ft=ruby :

# TODO: Make this a CLI option somehow.
reposeVersion=''
#reposeVersion='local'
#reposeVersion='7.3.7.0'

$update_yum = <<SCRIPT
echo "-------------------------------------------------------------------------------------------------------------------"
echo "Updating Yum packages"
echo "-------------------------------------------------------------------------------------------------------------------"

# update package lists from the server
yum update -y --quiet
SCRIPT

$install_old_repose_dependencies = <<SCRIPT
echo "-------------------------------------------------------------------------------------------------------------------"
echo "Installing Repose package dependencies (old Daemonize)"
echo "-------------------------------------------------------------------------------------------------------------------"

# install potentially missing packages needed to install Repose
yum install -y --quiet git ruby-devel gcc make rpm-build
# get the daemonize source and build it.
git clone https://github.com/bmc/daemonize.git
cd daemonize
sh configure
make
make install
cd /usr/sbin/
ln -s ../local/sbin/daemonize

# install a fake daemonize package to make older Repose versions happy.
gem install fpm
/usr/local/bin/fpm -s empty -t rpm -n daemonize -v 0.0.0 --iteration 0 --architecture noarch
rpm --install --ignorearch daemonize-0.0.0-0.noarch.rpm
SCRIPT

$install_repose_dependencies = <<SCRIPT
echo "-------------------------------------------------------------------------------------------------------------------"
echo "Installing Repose package dependencies"
echo "-------------------------------------------------------------------------------------------------------------------"

# install potentially missing packages needed to install Repose
yum install -y --quiet wget

# add openrepose.org repository
wget --quiet -O /etc/yum.repos.d/openrepose.repo http://repo.openrepose.org/el/openrepose.repo

## add nodesource.com repository
##### Your distribution, identified as "centos-release-7-2.1511.el7.centos.2.10.x86_64", is not currently supported,
##### please contact NodeSource at https://github.com/nodesource/distributions/issues if you think this is incorrect or
##### would like your distribution to be considered for support
#curl -sL https://rpm.nodesource.com/setup_0.12 | bash -
SCRIPT

$install_nodejs = <<SCRIPT
echo "-------------------------------------------------------------------------------------------------------------------"
echo "Installing Node JS"
echo "-------------------------------------------------------------------------------------------------------------------"

wget --quiet https://rpm.nodesource.com/pub_0.12/el/7/x86_64/nodejs-0.12.7-1nodesource.el7.centos.x86_64.rpm
rpm -Uh --quiet nodejs-0.12.7-1nodesource.el7.centos.x86_64.rpm
yum install -y --quiet gcc-c++ make
SCRIPT

$install_python = <<SCRIPT
echo "-------------------------------------------------------------------------------------------------------------------"
echo "Installing Python"
echo "-------------------------------------------------------------------------------------------------------------------"

yum install -y curl python-setuptools
easy_install pip
pip install --upgrade pip setuptools
SCRIPT

$other_tools = <<SCRIPT
echo "-------------------------------------------------------------------------------------------------------------------"
echo "Installing other tools"
echo "-------------------------------------------------------------------------------------------------------------------"

yum install -y --quiet vim
SCRIPT

$install_repose = <<SCRIPT
name='default'
version=''
if [ $# -ne 0 ] ; then
  if [ "X_${1}_X" = "X_local_X" ] ; then
    name="${1}"
  else
    name="v${1}"
    version="-${1}-1"
  fi
fi
echo "-------------------------------------------------------------------------------------------------------------------"
echo "Installing Repose ${name} package"
echo "-------------------------------------------------------------------------------------------------------------------"


if [ "X_${name}_X" = "X_local_X" ] ; then
  yum --nogpgcheck localinstall -y /vagrant/repose-valve-*.noarch.rpm /vagrant/repose-filter-bundle-*.noarch.rpm /vagrant/repose-extensions-filter-bundle-*.noarch.rpm
else
  yum install -y repose-valve${version} repose-filter-bundle${version} repose-extensions-filter-bundle${version}
fi
SCRIPT

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "centos/7"

  config.vm.provision "shell", inline: $update_yum
  # IF the Repose version is < 8.1.0.0,
  # THEN the old Daemonize needs to be manually installed since it is no longer packaged.
  # TODO: Make this conditional.
  config.vm.provision "shell", inline: $install_old_repose_dependencies
  config.vm.provision "shell", inline: $install_repose_dependencies
  config.vm.provision "shell", inline: $other_tools
  config.vm.provision "shell", inline: $install_python
  config.vm.provision "shell", inline: $install_nodejs
  config.vm.provision "shell", path: "../scripts/python_installs.sh"

  config.vm.provision "shell", path: "../scripts/fake_keystone_prepare.sh"
  # original file contents taken from: https://github.com/rackerlabs/repose-perf-infrastructure/blob/master/src/repose_performance/tracing/master/package.json
  config.vm.provision "file", source: "../fake-keystone2/package.json", destination: "/opt/fake-keystone/package.json"
  # original file contents taken from: https://github.com/rackerlabs/repose-perf-infrastructure/blob/master/src/repose_performance/tracing/master/auth_backend.js.j2
  config.vm.provision "file", source: "../fake-keystone2/app.js", destination: "/opt/fake-keystone/app.js"
  config.vm.provision "shell", privileged: false, path: "../scripts/fake_keystone_install.sh"
  config.vm.provision "shell", path: "../scripts/fake_keystone_run.sh", run: "always"

  config.vm.provision "shell", path: "../scripts/fake_valkyrie_prepare.sh"
  # original file contents taken from: https://github.com/rackerlabs/repose-perf-infrastructure/blob/master/src/repose_performance/valkyrie/master/package.json
  config.vm.provision "file", source: "../fake-valkyrie2/package.json", destination: "/opt/fake-valkyrie/package.json"
  # original file contents taken from: https://github.com/rackerlabs/repose-perf-infrastructure/blob/master/src/repose_performance/valkyrie/master/valkyrie_backend.js
  config.vm.provision "file", source: "../fake-valkyrie2/app.js", destination: "/opt/fake-valkyrie/app.js"
  config.vm.provision "shell", privileged: false, path: "../scripts/fake_valkyrie_install.sh"
  config.vm.provision "shell", path: "../scripts/fake_valkyrie_run.sh", run: "always"

  config.vm.provision "shell", path: "../scripts/httpbin_run.sh", run: "always"

  config.vm.provision "shell", inline: $install_repose do |s|
    s.args = "#{reposeVersion}"
  end
  config.vm.provision "shell", path: "../scripts/repose_run.sh"

  config.vm.synced_folder ".", "/home/vagrant/sync", disabled: true
  config.vm.synced_folder ".", "/vagrant", mount_options: ["dmode=777,fmode=666"]
end
